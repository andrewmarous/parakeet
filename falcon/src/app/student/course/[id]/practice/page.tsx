"use client";

import PracticeExamCard from "@/app/components/Cards/PracticeExamCard/PracticeExamCard";
import NoPracticeEmptyState from "@/app/components/EmptyStates/NoPracticeEmptyState/NoPracticeEmptyState";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/app/components/Tabs/Tabs";
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/app/components/Tooltip/Tooltip";
import { SelectExam } from "@/db/schema/exams.schema";
import { usePathname, useRouter } from "next/navigation";
import { useEffect, useState } from "react";
import { AiOutlineQuestionCircle } from "react-icons/ai";
import { LuGlobe, LuPersonStanding } from "react-icons/lu";
import { Oval } from "react-loader-spinner";
import { getExams } from "./actions";

export default function PracticePage() {
  const router = useRouter();
  const [loading, setLoading] = useState(true);
  const pathname = usePathname();
  const courseSlug = pathname.split("/")[3];
  const [exams, setExams] = useState<SelectExam[]>([]);
  const [studentExams, setStudentExams] = useState<SelectExam[]>([]);

  useEffect(() => {
    setLoading(true);
    getExams(courseSlug)
      .then((data) => {
        setExams(data.allExams);
        setStudentExams(data.studentExams);
      })
      .then(() => {
        setLoading(false);
      });
  }, [courseSlug]);

  return loading ? (
    <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
      <Oval
        visible={true}
        height="54"
        width="54"
        color="#313149"
        secondaryColor="rgba(0,0,0,0)"
        ariaLabel="oval-loading"
        wrapperStyle={{}}
        wrapperClass="absolute top-1/2 left-1/2 translate-x-[-50%] translate-y-[-50%]"
      />
    </div>
  ) : exams.length === 0 ? (
    <div className="fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
      <NoPracticeEmptyState />
    </div>
  ) : (
    <>
      <Tabs defaultValue="course">
        <div className="flex flex-row gap-3">
          <TabsList className="grid grid-cols-2 gap-1">
            <TabsTrigger value="course">
              {" "}
              <LuGlobe className="h-3 mr-2" /> All material
            </TabsTrigger>
            <TabsTrigger value="student">
              <LuPersonStanding className="h-3 mr-2" />
              Generated by you
            </TabsTrigger>
          </TabsList>
          <TooltipProvider>
            <Tooltip>
              <TooltipTrigger>
                <AiOutlineQuestionCircle className="w-4 h-4 fill-grey-600" />
              </TooltipTrigger>
              <TooltipContent className="max-w-96">
                <p className="text-grey-800">
                  View study materials generated by your classmates.
                </p>
              </TooltipContent>
            </Tooltip>
          </TooltipProvider>
        </div>
        <TabsContent value="course" className="w-full">
          <div className="grid grid-cols-5 w-full gap-8 mt-8">
            {exams.map((exam: SelectExam) => (
              <PracticeExamCard key={exam.id} exam={exam} />
            ))}
          </div>
        </TabsContent>
        <TabsContent value="student" className="w-full">
          <div className="grid grid-cols-5 w-full gap-8 mt-8">
            {studentExams.map((exam) => (
              <PracticeExamCard key={exam.id} exam={exam} />
            ))}
          </div>
        </TabsContent>
      </Tabs>
    </>
  );
}
